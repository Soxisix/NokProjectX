<UserControl
    x:Class="NokProjectX.Wpf.Views.SideBarView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="clr-namespace:NokProjectX.Wpf.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    Background="{DynamicResource MaterialDesignPaper}"
    DataContext="{Binding SideBar, Source={StaticResource Locator}}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    mc:Ignorable="d">

    <materialDesign:Card VerticalAlignment="Stretch" materialDesign:ShadowAssist.ShadowDepth="Depth2" Background="#FF231F1F">
        <ListView
            VerticalContentAlignment="Top"
            ItemsSource="{Binding MenuList}"
            SelectedIndex="0"
            SelectionMode="Single">
            <i:Interaction.Behaviors>
                <common:SelectItemOnButtonClick />
            </i:Interaction.Behaviors>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Button
                        Width="55"
                        Height="55"
                        Margin="-9"
                        BorderThickness="0">
                        <Button.Style>
                            <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True">
                                        <DataTrigger.Setters>
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <ImageBrush ImageSource="{Binding Hovered}" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="False">
                                        <DataTrigger.Setters>
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <ImageBrush ImageSource="{Binding UnHovered}" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <ImageBrush ImageSource="{Binding Hovered}" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </materialDesign:Card>
</UserControl>


